package ChatRoom;
import com.mrjaffesclass.apcs.messenger.*;
import java.awt.event.KeyEvent;
import java.util.ArrayList;

/**
 * MVC Template
 * This is a template of an MVC framework used by APCS for the 
 * LandMine project (and others)
 * @author Roger Jaffe
 * @version 1.0
 * 
 */
public class View extends javax.swing.JFrame implements MessageHandler {

  private final Messenger mvcMessaging;
  
  /**
   * Creates a new view
   * @param messages mvcMessaging object
   */
  public View(Messenger messages) {
    mvcMessaging = messages;   // Save the calling controller instance
    initComponents();           // Create and init the GUI components
  }
  
  /**
   * Initialize the model here and subscribe
   * to any required messages
   */
  public void init() {
    // Subscribe to messages here
    mvcMessaging.subscribe("view:login", this);
    mvcMessaging.subscribe("model:chatLogChanged", this);
  }
  
  @Override
  public void messageHandler(String messageName, Object messagePayload) {
    if (messageName.equals("view:login")) {
      messageInput.setEnabled(true);
      username.setEnabled(false);
    }
    if (messageName.equals("model:chatLogChanged")) {
      ArrayList<Chat> list = (ArrayList)messagePayload;
      StringBuilder buffer = new StringBuilder();
      for (Chat chat : list) {
        buffer.append(chat.getUsername())
          .append("\n")
          .append(chat.getMessage())
          .append("\n\n");
      }
      chatLog.setText(buffer.toString());
    }
//    if (messageName.equals("model:variable1Changed")) {
//      jLabel8.setText(messagePayload.toString());
//    } else {
//      jLabel10.setText(messagePayload.toString());      
//    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    chatLog = new javax.swing.JTextArea();
    messageInput = new javax.swing.JTextField();
    username = new javax.swing.JTextField();
    login = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    chatLog.setColumns(20);
    chatLog.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
    chatLog.setRows(5);
    chatLog.setEnabled(false);
    jScrollPane1.setViewportView(chatLog);

    messageInput.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
    messageInput.setEnabled(false);
    messageInput.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        messageInputKeyReleased(evt);
      }
    });

    username.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
    username.setToolTipText("Username");
    username.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        usernameKeyReleased(evt);
      }
    });

    login.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
    login.setText("Login");
    login.setEnabled(false);
    login.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        loginActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(38, 38, 38)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
          .addComponent(messageInput)
          .addComponent(jScrollPane1))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      .addGroup(layout.createSequentialGroup()
        .addGap(39, 39, 39)
        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(44, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(26, 26, 26)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(login))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(messageInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(28, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void usernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyReleased
    // TODO add your handling code here:
    login.setEnabled(username.getText().length() > 0);
  }//GEN-LAST:event_usernameKeyReleased

  private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
    // TODO add your handling code here:
    mvcMessaging.notify("view:login", username.getText(), true);
  }//GEN-LAST:event_loginActionPerformed

  private void messageInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_messageInputKeyReleased
    // TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
      Chat chatItem = new Chat(username.getText(), messageInput.getText());
      mvcMessaging.notify("view:sendChatItem", chatItem, true);
      messageInput.setText("");
    }
  }//GEN-LAST:event_messageInputKeyReleased

  /**
   * @param args the command line arguments
   */

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextArea chatLog;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton login;
  private javax.swing.JTextField messageInput;
  private javax.swing.JTextField username;
  // End of variables declaration//GEN-END:variables
}
